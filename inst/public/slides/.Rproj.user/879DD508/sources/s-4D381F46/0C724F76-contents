---
title: "&#8291;1. Introduction to Bayesian reasoning, computation and BUGS"
author: Gianluca Baio
institute: "[Department of Statistical Science](https://www.ucl.ac.uk/statistics/) | University College London"
params: 
   - conference: "Bayesian Methods in Health Economics"
   - location: "Lausanne" 
date: 
output:
  xaringan::moon_reader:
    includes: 
       in_header: "../assets/latex_macros.html" 
       ## This line adds a logo based on the format selected in the file 'assets/THEME/include_logo.html'
       ## NB: the actual options (eg placement of the logo and actual logo file) can be changed there
       ## There's also a script to manipulate the colouring scheme for the UCL logo (from a basic black/white one)
       after_body: "../assets/beamer/insert-logo-ucl.html"
    seal: false
    yolo: no
    lib_dir: libs
    nature:
      beforeInit: ["https://platform.twitter.com/widgets.js"]
      highlightStyle: github
      highlightLines: yes
      countIncrementalSlides: no
      ratio: '16:9'
      titleSlideClass:
      - center
      - middle
    self_contained: false 
    css:
    - "../assets/beamer.css"
---

```{r echo=F,message=FALSE,warning=FALSE,comment=NA}
# Sources the R file with all the relevant setup and commands
source("../assets/setup.R")

# Stuff from 'xaringanExtra' (https://pkg.garrickadenbuie.com/xaringanExtra)
# This allows the use of panels (from 'xaringanExtra')
xaringanExtra::use_panelset()
# This allows to copy code from the slides directly
xaringanExtra::use_clipboard()
# This freezes the frame for when there's a gif included
xaringanExtra::use_freezeframe()

# Defines the path to the file with the .bib entries (in case there are references)
bibfile=ReadBib("~/Dropbox/Perso/Office/CV/mypubs.bib",check = FALSE)
```

```{r title-page, child="../assets/title-slide-gb.Rmd"}
```

# Objective of this course

.pull-left[
`r include_fig("sheldon.png",width="430px")`

`r include_fig("sheldon_penny.png",width="430px")`
]
.pull-right[
`r vspace("1em")`
- Introduction to .red[Bayesian analysis]
   - MCMC methods
   - Using `R` and `BUGS`

- Apply Bayesian analysis to .red[health economic evaluations]
   - Cost-effectiveness analysis
   - Probabilistic sensitiity analysis
   - Advanced modelling
   
`r vspace("3em")`

- Emphasis on **practical examples**
   - `BUGS` analysis
   - `R`/`BUGS` and `BCEA`
   - Problem-specific vs standardised analysis
]

---

# Relevant resources

The course [website](../index.html) contains all the relevant information

- [Reading list](../../publication/index.html)

- [Course description & assessment](../../index.html#description)

- [Full timetable](../../index.html#timetable)

- [Full syllabus](../../syllabus)

- [Useful tips](../../tips) of the computer specification (for the practicals)

All the lecture slides are also available from the main page (see top menu under "Slides")

The material for the computer practicals is also available from the main page (see top menu under "Practicals")

.content-box-beamer[
### 
<p style="margin-left: 0em;"><i class="fas fa-info-circle" style="color: #5b7fd9;"></i> The relevant slides and practical material will be made available <b>before</b> the scheduled lecture. 

<p style="margin-left: 1.4xem;">Annotated solutions to the practicals will also be made available <b>after</b> the sessions.</p>
]

--

`r vspace("30px")`

- Some `r icon::fontawesome("r-project")` resources: 
   - [This](https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf) is a very comprehensive introduction.
   - [This](https://r4ds.had.co.nz/introduction.html) is also a very good introduction, particularly around many of the more modern features of R (e.g. the [`tidyverse`](https://www.tidyverse.org/) package/approach).

- NICE Decision Support Unit website: [http://nicedsu.org.uk/](http://nicedsu.org.uk/)

- Moodle page (UCL-registered): [https://moodle.ucl.ac.uk/course/view.php?id=8596](https://moodle.ucl.ac.uk/course/view.php?id=8596)

---

# Reds vs Blues

`r include_fig("books.png",width="920px")`

---

# Disclaimer...

<center>
<blockquote class="twitter-tweet"><p lang="en" dir="ltr">Best opening sentence <a href="https://twitter.com/hashtag/ISPOREurope?src=hash&amp;ref_src=twsrc%5Etfw">#ISPOREurope</a> from Gianluca Baio: “statisticians should rule the world and Bayesian statisticians should rule all statisticians” <a href="https://t.co/GN2w7liAcR">https://t.co/GN2w7liAcR</a></p>&mdash; Manuela Joore (@ManuelaJoore) <a href="https://twitter.com/ManuelaJoore/status/1191397718930939904?ref_src=twsrc%5Etfw">November 4, 2019</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script> 
</center>

`r vspace("2rem")`
...Just so you know what you're about to get into... `r emo::ji("wink")`

---

# Summary 

- Deductive inference
   - "Standard" statistical methods

- Inductive inference
   - Bayesian reasoning
   - Basic ideas

- The Bayesian view making *probability statements about parameters*
   - *Quantities* that control reality (patient's risk of disease, treatment effects $\ldots$)
   - Don't / can't know them for sure
   - Can express this *uncertainty* using tools of *probability*

- Examples of probability distributions

- Monte Carlo simulation for prediction under uncertainty

- Implementation in `BUGS`

`r vspace("2rem")`

.content-box-beamer[
### References 
`r vspace("20px")`

`r bugs_book(c(1,2,5))`

`r bmhe(c(2,4))`

`r icon::fontawesome("firefox")` [https://gianluca.statistica.it/teaching/intro-stats/](https://gianluca.statistica.it/teaching/intro-stats/)
]

---


# What is statistics all about?

- Typically, we observe some data and we want to use them to learn about some unobservable feature of the general population in which we are interested

- To do this, we use statistical models to describe the probabilistic mechanism by which (**we assume!**) that the data have arisen

<center>
```{r statistics-all-about, engine='tikz', echo=F, opts=list(width="85%",title="An alleged data generating process, where the sampling variability in the observed data is modelled as a Normal distribution, depending on some parameters"), crop=TRUE,eval=FALSE}
%\begin{center}
\begin{tikzpicture}
\draw(2.3,3) node[align=center,rectangle,draw=none,fill=none,minimum width=.5cm,minimum height=.5cm,font=\sffamily](1){$\theta$};
\draw(2.3,1) node[align=center,circle,draw=none,fill=none,font=\sffamily](2){$y$};
\draw(1,1) node[align=center,fill=none,minimum width=.5cm,minimum height=.5cm,font=\sffamily](3){$p(y\mid \theta)$};
\draw(4,3) node[align=center,fill=none,minimum width=.5cm,minimum height=.5cm,font=\sffamily](3){\color{blue} Parameters};
\draw(4,1) node[align=center,fill=none,minimum width=.5cm,minimum height=.5cm,font=\sffamily](3){\color{blue} Data};
\draw(-2.0,2) node[align=center,fill=none,draw=none]{\includegraphics[scale=.23]{/home/gianluca/Dropbox/UCL/Biostats/normal.pdf}};
\draw(-1.85,.65) node[align=center,fill=none,draw=none,font=\fontsize{6}{7}\selectfont]{$\mu$};
\draw(-2.15,1.20) node[align=center,fill=none,draw=none,font=\fontsize{6}{7}\selectfont]{$2\sigma$};
\draw(-1.9,3.35) node[align=center,fill=none,draw=none,font=\fontsize{6}{7}\selectfont\sffamily]{Normal distribution};
\draw(8.0,2) node[align=center,fill=none,draw=none]{ };
\draw [->,>=latex,shorten >=0pt,auto,node distance=3cm,ultra thin] (1.south) -- (2.north);
\draw [<->,>=latex,shorten >=0pt,auto,node distance=-3cm,ultra thin] (-1.85,1.05) -- (-2.48,1.05);
\end{tikzpicture}
%\end{center}
```
`r include_fig("statistics-all-about-1.png",width="85%")`
</center>

**NB**: Roman letters $(y$ or $x)$ typically indicate **observable data**, while Greek letters $(\theta$, $\mu$, $\sigma$, $\ldots)$ indicate **population parameters**

---
exclude: true
# Sampling variability 
`r vspace("-20px")`
### Probability calculus

<center><img src="img/prob_calculus.png" width="80%" title="Probability calculus is a process whereby we assume a known data generating process and we assess/propagate the sampling variability, e.g. the ways in which data can arise. From the entire population, we may enumerate all the possible ways of obtaining samples of a specific size"></center>

---

exclude: true
# Sampling variability 
`r vspace("-20px")`
### Statistics

<center><img src="img/statistics.png" width="80%" title="Statistics is essentially the inverse problem - we only have one observed dataset and based on the observations and some assumptions about the underlying data generating process, we want to infer some features of the parameters that characterise the underlying variability"></center>

In reality we observe **only one** such sample (out of the many possible &ndash; in fact there are **252** different ways of picking **at random** 5 units out of a population of size 10!) and we want to use the information contained in **that** sample to **infer** about the population parameters (e.g. the true mean and standard deviation)

---

background-image: url("img/Sherlock.png")
background-size: cover

# The Sherlock conundrum

---

# **Deductive** vs inductive inference

```{r goodman,engine='tikz', echo=F, opts=list(width="85%",title="Imagine a data generating process, where there are three possible 'true' values for the main parameter (the effect difference Delta). Then there are many possible outcomes, say an observed difference of -5%, 0%, 5%, 10% or 15%"),eval=FALSE}
\input{../assets/latex_colours.tex}
%\begin{center}
\begin{tikzpicture}
\draw(-.5,4.4) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](2){Hypothesis 1};
\draw(2,4.4) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](3){Hypothesis 2};
\draw(4.5,4.4) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](4){Hypothesis 3};
\draw(-.5,3.8) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](5){$\Delta=0\%$};
\draw(2,3.8) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](6){$\Delta=5\%$};
\draw(4.5,3.8) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](7){$\Delta=10\%$};
\draw(-1.75,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](8){$-5\%$};
\draw(0.75,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](9){$0\%$};
\draw(2.0,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](10){$5\%$};
\draw(3.25,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](11){$10\%$};
\draw(5.75,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](12){$15\%$};
\draw(-3,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](13){$ $};
\draw(-3,4.4) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](1){\white\textbf{Deduction}};

\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (5.220) -- (8.50);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (5.320) -- (9.130);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (5.330) -- (10.120);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (5.340) -- (11.140);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (5.350) -- (12.150);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (6.210) -- (8.40);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (6.220) -- (9.90);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (6.270) -- (10.90);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (6.320) -- (11.120);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (6.330) -- (12.140);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (7.190) -- (8.30);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (7.200) -- (9.50);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (7.210) -- (10.70);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (7.220) -- (11.80);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (7.320) -- (12.130);
\end{tikzpicture}
%\end{center}
```
`r include_fig("goodman-1.png",width="75%")`
---

count: false
# **Deductive** vs inductive inference

```{r deduction1,engine='tikz', echo=F, opts=list(width="85%",title="In a frequentist set up, you fix the value of the model parameters and then make a probabilistic calculation on how likely the observed data are under the alleged data generation process. Then you can compare that probabilistic calculation with similar ones for other possible observed data (which in fact have not been observed!)"),eval=FALSE}
\input{../assets/latex_colours.tex}
%\begin{center}
\begin{tikzpicture}
\draw(-.5,4.4) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](2){Hypothesis 1};
\draw(2,4.4) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](3){Hypothesis 2};
\draw(4.5,4.4) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](4){Hypothesis 3};
\draw(-.5,3.8) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](5){$\mygrey \Delta=0\%$};
\draw(2,3.8) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](6){$\mygrey \Delta=5\%$};
\draw(4.5,3.8) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](7){$\orange \Delta=10\%$};
\draw(-1.75,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](8){$\blue -5\%$};
\draw(0.75,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](9){$0\%$};
\draw(2.0,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](10){$5\%$};
\draw(3.25,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](11){$10\%$};
\draw(5.75,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](12){$15\%$};
\draw(-3,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](13){$ $};
\draw(-3,4.4) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](1){\red\textbf{Deduction}};

\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=mygrey] (5.220) -- (8.50);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=mygrey] (5.320) -- (9.130);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=mygrey] (5.330) -- (10.120);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=mygrey] (5.340) -- (11.140);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=mygrey] (5.350) -- (12.150);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=mygrey] (6.210) -- (8.40);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=mygrey] (6.220) -- (9.90);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=mygrey] (6.270) -- (10.90);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=mygrey] (6.320) -- (11.120);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=mygrey] (6.330) -- (12.140);
\draw [dashed,->,>=latex,shorten >=0pt,auto,node distance=0cm,thin,color=red] (7.190) to[out=190, in=20,looseness=1] (8.30);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (7.200) -- (9.50);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (7.210) -- (10.70);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (7.220) -- (11.80);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (7.320) -- (12.130);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,thick,color=red] (1.270) -- (13.90);
\end{tikzpicture}
%\end{center}
```
`r include_fig("deduction1-1.png",width="85%")`

`r vspace("2em")`

- Standard (frequentist) procedures fix the working hypotheses and, **by deduction**, make inference on the observed data:
   - If my hypothesis is true, what is the probability of randomly selecting the data that I actually observed? If small, then *deduce* weak support of the evidence to the hypothesis
--

   - Assess $\Pr(\class{blue}{`r sftext("Observed data")`} \mid \class{orange}{`r sftext("Hypothesis")`})$
   - Directly relevant for standard frequentist summaries, eg p-values, Confidence Intervals, etc
   - **NB**: Comparison with data that could have been observed, but haven't!

`r vspace("50px")`
.small[
.alignright[
Adapted from `r icon::academicons("pubmed")` [Goodman (1999)](https://pubmed.ncbi.nlm.nih.gov/10383371)
]
]

---

# Is there another way?...

<center><img src="img/brexit_bridge.jpg" width="65%"></center>

---

# Deductive vs **inductive** inference

```{r induction1,engine='tikz', echo=F, opts=list(width="85%",title="An inductive process still considers the same data generating process representation, with possible values of the model parameters and possible realisations of the observable data"),eval=FALSE}
\input{../assets/latex_colours.tex}
%\begin{center}
\begin{tikzpicture}
\draw(-.5,4.4) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](2){Hypothesis 1};
\draw(2,4.4) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](3){Hypothesis 2};
\draw(4.5,4.4) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](4){Hypothesis 3};
\draw(-.5,3.8) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](5){$\Delta=0\%$};
\draw(2,3.8) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](6){$\Delta=5\%$};
\draw(4.5,3.8) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](7){$\Delta=10\%$};
\draw(-1.75,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](8){$-5\%$};
\draw(0.75,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](9){$0\%$};
\draw(2.0,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](10){$5\%$};
\draw(3.25,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](11){$10\%$};
\draw(5.75,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](12){$15\%$};
\draw(-3,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](13){$ $};
\draw(7,4.4) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](15){$ $};
\draw(7,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](14){\olive\textbf{Induction}};

\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (5.220) -- (8.50);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (5.320) -- (9.130);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (5.330) -- (10.120);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (5.340) -- (11.140);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (5.350) -- (12.150);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (6.210) -- (8.40);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (6.220) -- (9.90);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (6.270) -- (10.90);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (6.320) -- (11.120);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (6.330) -- (12.140);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (7.190) -- (8.30);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (7.200) -- (9.50);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (7.210) -- (10.70);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (7.220) -- (11.80);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (7.320) -- (12.130);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,thick,color=olive] (14.90) -- (15.270);
\end{tikzpicture}
%\end{center}
```
`r include_fig("induction1-1.png",width="85%")`

`r vspace("2em")`

- The **Bayesian** philosophy proceeds fixing the value of the observed data and, **by induction**, makes inference on unobservable hypotheses
   - What is the probability of my hypothesis, given the data I observed? If less than the probability of other competing hypotheses, then weak support of the evidence to the hypothesis
   
---

count: false
# Deductive vs **inductive** inference

```{r induction2,engine='tikz', echo=F, opts=list(width="85%",title="The difference is that instead of fixing the value of the unobservable model parameters, a Bayesian (inductive) process, considers as fixed the observed data (because once they have been observed there is no more uncertainty about their actual value). The model parameters are subject to uncertainty and then you make a probabilistic assessment about them, given the observed data"),eval=FALSE}
\input{../assets/latex_colours.tex}
%\begin{center}
\begin{tikzpicture}
\draw(-.5,4.4) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](2){Hypothesis 1};
\draw(2,4.4) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](3){Hypothesis 2};
\draw(4.5,4.4) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](4){Hypothesis 3};
\draw(-.5,3.8) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](5){$\Delta=0\%$};
\draw(2,3.8) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](6){$\Delta=5\%$};
\draw(4.5,3.8) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](7){$\orange\Delta=10\%$};
\draw(-1.75,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](8){$\blue -5\%$};
\draw(0.75,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](9){$\mygrey 0\%$};
\draw(2.0,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](10){$\mygrey 5\%$};
\draw(3.25,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](11){$\mygrey 10\%$};
\draw(5.75,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](12){$\mygrey 15\%$};
\draw(-3,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](13){$ $};
\draw(7,4.4) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](15){$ $};
\draw(7,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](14){\olive\textbf{Induction}};

\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin]  (8.50) -- (5.220);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin] (8.40) -- (6.210);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=mygrey] (7.200) -- (9.50);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=mygrey] (7.210) -- (10.70);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=mygrey] (7.220) -- (11.80);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=mygrey] (7.320) -- (12.130);
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,thick,color=olive] (14.90) -- (15.270);
\draw [dashed,->,>=latex,shorten >=0pt,auto,node distance=0cm,thin,color=olive] (8.25) to[out=20, in=190,looseness=1] (7.190);
\end{tikzpicture}
%\end{center}
```
`r include_fig("induction2-1.png",width="85%")`

`r vspace("2em")`

- The **Bayesian** philosophy proceeds fixing the value of the observed data and, **by induction**, makes inference on unobservable hypotheses
   - What is the probability of my hypothesis, given the data I observed? If less than the probability of other competing hypotheses, then weak support of the evidence to the hypothesis
   - Assess $\Pr(\color{#ff8811}{`r sftext("Hypothesis")`} \mid \color{#0000FF}{`r sftext("Observed data")`})$
   - Can express in terms of an **interval** estimate: $\Pr(a \leq `r sftext("parameter")` \leq b \mid `r sftext("Data")`)$
   - **NB**: Unobserved data have no role in the inference!

---


# Bayesian inference 

## How did it all start?

In 1763, Reverend Thomas Bayes of Tunbridge Wells wrote

`r include_fig("bayes-quote.jpg",width="650px")`

In modern language, given $r \sim `r sftext("Binomial")`(\theta,n)$, what is
$\Pr( \theta_1 < \theta < \theta_2\mid r,n)$?

`r vspace("3rem")`

.content-box-beamer[

### Some historical references

`r icon::fontawesome("firefox")` [http://www.bayesian.org/resources/bayes.html](http://www.bayesian.org/resources/bayes.html)    
`r icon::fontawesome("book")` S. Bertsch McGrayne (2011). *[The Theory That Would Not Die](https://www.amazon.co.uk/Theory-That-Would-Not-Die/dp/0300188226)* .alignright[**see `r ref_lecture("bugs","video")`**]     
`r icon::academicons$doi` S. Fienberg (2006). [When did Bayesian inference become Bayesian?](doi:10.1214/06-BA101)
]

---

count: false
# Bayesian inference

## Basic ideas

### Direct expression of uncertainty about unknown parameters

`r vspace("-10px")`
.content-box-lightblue[
"There is an 89% probability that the absolute increase in major bleeds is less than 10 percent with low-dose PLT 
transfusions"  .small[.alignright[(`r icon::academicons$pubmed` [Tinmouth et al, *Transfusion*, 2004](https://pubmed.ncbi.nlm.nih.gov/15584985))]]]

`r vspace("20px")`
```{r, echo=FALSE, fig.width=12,fig.height=10,out.width="45%",opts=list(width="40%",title="The graph shows the distribution of the % absolute increase in risk, given the observed data. As most of this distribution is below 10%, then we can conclude that the risk is limited")}
mu=-10
sigma=15
ggplot(data.frame(x = c(-50, 30)), aes(x = x)) + 
  stat_function(fun = dnorm, args = list(mean = mu, sd = sigma)) + 
  stat_function(fun = dnorm, args = list(mean = mu, sd = sigma), 
                xlim = c(-50,10), 
                geom = "area", fill = "steelblue", alpha = .2) +
  scale_x_continuous(name = "% absolute increase in major bleeds", breaks = seq(-50, 30, sigma)) +
  scale_y_continuous(name = "") + 
  theme_classic() +
  theme(axis.ticks.y=element_blank(),
        axis.text.y=element_blank(),
        axis.line.y = element_line(size = 0.5, linetype = "solid", colour = "white"),
        text=element_text(size=20)
  )

```

---

count: false
# Bayesian inference 

## Basic ideas

```{r,engine='tikz', echo=F, out.width="30%",opts=list(width="30%",fig.align="center",title="An example of a diagnostic problem. If we do not consider the 'background prevalence' of the disease, we get an incomplete picture. Bayes theorem allows us to account of this information formally")}
\begin{tikzpicture}
\draw(2,4.1) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](1){Disease};
\draw(4.5,4.1) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](2){\color{green!70!black!90}No disease};

\draw(2,3.8) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](3){\color{gray!20}$\pi=0.1$};

\draw(4.5,3.8) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](4){\color{gray!20}$1-\pi=0.9$};

\draw(2.0,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](5){\textbf{$-$ve}};

\draw(4.5,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](6){$+$ve};

\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=red] (3.south) -- (5.north) node[midway,left,font=\fontsize{6}{7}\selectfont] {$0.04$}; 
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=red] (3.300) -- (6.120) node[right,below,pos=.72,inner sep=5pt,font=\fontsize{6}{7}\selectfont] {$0.96$}; 
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=green!70!black!90] (4.south) -- (6.north) node[midway,right,font=\fontsize{6}{7}\selectfont] {$0.05$}; 
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=green!70!black!90] (4.240) -- (5.60) node[right,above,pos=.74,inner sep=5pt,font=\fontsize{6}{7}\selectfont] {$0.95$}; 
\end{tikzpicture}
```

- Suppose a patient is tested for HIV. The test comes up negative (&ndash;ve)

- Given the assumptions/model, this indicates **fairly strong** evidence against the hypothesis that the true status is "Disease", so basically $p=0.04$

---
count: false
# Bayesian inference

## Basic ideas

```{r,engine='tikz', echo=F, out.width="30%",opts=list(width="30%",fig.align="center",title="An example of a diagnostic problem. If we do not consider the 'background prevalence' of the disease, we get an incomplete picture. Bayes theorem allows us to account of this information formally")}
\begin{tikzpicture}
\draw(2,4.1) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](1){Disease};
\draw(4.5,4.1) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=2.2cm](2){\color{green!70!black!90}No disease};

\draw(2,3.8) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](3){$\pi=0.1$};

\draw(4.5,3.8) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](4){$1-\pi=0.9$};

\draw(2.0,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](5){\textbf{$-$ve}};

\draw(4.5,2) node[align=center,rectangle,rounded corners=2ex,draw=none,fill=none,font=\sffamily\fontsize{7}{7}\selectfont,minimum width=1.2cm](6){$+$ve};

\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=red] (3.south) -- (5.north) node[midway,left,font=\fontsize{6}{7}\selectfont] {$0.04$}; 
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=red] (3.300) -- (6.120) node[right,below,pos=.72,inner sep=5pt,font=\fontsize{6}{7}\selectfont] {$0.96$}; 
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=green!70!black!90] (4.south) -- (6.north) node[midway,right,font=\fontsize{6}{7}\selectfont] {$0.05$}; 
\draw [->,>=latex,shorten >=0pt,auto,node distance=0cm,ultra thin,color=green!70!black!90] (4.240) -- (5.60) node[right,above,pos=.74,inner sep=5pt,font=\fontsize{6}{7}\selectfont] {$0.95$}; 
\end{tikzpicture}
```

- Suppose a patient is tested for HIV. The test comes up negative (&ndash;ve)

- Given the assumptions/model, this indicates **fairly strong** evidence against the hypothesis that the true status is "Disease", so basically $p=0.04$

- But: how **prevalent** is the disease in the population?
  - We can model our prior knowledge about this and combine this information with the evidence from the data (using **Bayes theorem**)

`r vspace("-20px")`
$$ \Pr(`r sftext("Disease")` \mid `r sftext("-ve")`) = \frac{\Pr(`r sftext("Disease")`)\Pr(`r sftext("-ve")` \mid `r sftext("Disease")`)}{\Pr(`r sftext("-ve")`)} $$

- Update uncertainty given the evidence provided by the data

---

# Bayesian inference  

## Prior vs posterior

- The evidence **from the data alone** tells us that the observed result is extremely unlikely under the hypothesis of "Disease"
- This is strongly dependent on the **context**, as provided by the prior knowledge/epistemic uncertainty, though!

```{r, echo=FALSE,fig.width=6,fig.height=6,out.width="40%",opts=list(width="35%",title="The posterior distribution can depend strongly on the value assumed for the prior. In general, if the prior is too strong (for example, if you assume that no-one has the disease in the first place), then the posterior will be completely driven by it. In this example, if the prior prevalence of the disease is 80%, then the posterior after observing a negative test is only about 14% chance of being infected")}
theta=seq(0,1,.01)
data=tibble(prior=theta, post=theta*0.04/(theta*0.04 + (1-theta)*.95))
data %>% ggplot() + geom_line(aes(prior,post)) + theme_bw() + 
  labs(x="Prior probability of disease", y="Posterior given -ve") +
  annotate("text",.1,data %>% filter(prior==0.1) %>% pull(post),label=format(data %>% filter(prior==0.1) %>% pull(post),digits=4),vjust=-1.2) +
  annotate("text",.4,data %>% filter(prior==0.4) %>% pull(post),label=format(data %>% filter(prior==0.4) %>% pull(post),digits=4),vjust=-1.2) +
  annotate("text",.8,data %>% filter(prior==0.8) %>% pull(post),label=format(data %>% filter(prior==0.8) %>% pull(post),digits=4),vjust=-1.2) +
  geom_segment(aes(x=.1,y=-Inf,xend=.1,yend=data %>% filter(prior==0.1) %>% pull(post)), linetype="dashed") +
  geom_segment(aes(x=.4,y=-Inf,xend=.4,yend=data %>% filter(prior==0.4) %>% pull(post)), linetype="dashed") +
  geom_segment(aes(x=.8,y=-Inf,xend=.8,yend=data %>% filter(prior==0.8) %>% pull(post)), linetype="dashed") 
```

---

count: false
# Bayesian inference 

## Basic ideas

- A Bayesian model specifies a **full probability distribution** to describe uncertainty

- This applies to    
   - **Data**, which are subject to **sampling variability**
   - **Parameters** (or hypotheses), typically unobservable and thus subject to **epistemic uncertainty**
   - And even future, yet unobserved realisations of the observable variables (data) 
--


- Probability is the only languange in the Bayesian framework to assess any form of imperfect information or knowledge
   - No need to distinguish between probability and confidence
   - Before even seeing the data, we need to identify a suitable probability distribution to describe the overall uncertainty about the data $\boldsymbol{y}$ and the parameters $\boldsymbol\theta$
   
--

$$ p(\boldsymbol{y},\boldsymbol\theta)=p(\boldsymbol\theta)p(\boldsymbol y\mid\boldsymbol\theta) = p(\boldsymbol y)p(\boldsymbol\theta\mid \boldsymbol y) $$
&emsp; (see also `r ref_lecture("ild","factorisation")`) from which we derive Bayes Theorem
   
$$ p(\boldsymbol\theta\mid \boldsymbol y) = \frac{p(\boldsymbol\theta)p(\boldsymbol y\mid\boldsymbol\theta)}{p(\boldsymbol y)} $$

- **Express beliefs in form of a probability distribution**

---

exclude: true
# Bayesian modelling

## (Super) silly example: drug

.pull-left[
**Existing knowledge**
- Population registries
- Observational studies
- Small/pilot RCTs
- Expert opinion
]
.pull-right[
]

`r vspace("-60px")`
```{r echo=FALSE,dev="tikz",out.width="33%",fig.width=4,fig.height=4,opts=list(width="33%",title="The prior distribution shows the 'state of science' about the relevant model parameters before any new data are observed")}
theta=seq(0,1,.001)
a=9.2
b=13.8
r=15
n=20
ggplot(data.frame(x = theta), aes(x = x)) + 
  stat_function(fun = dbeta, args = list(shape1 = a+r, shape2 = b+n-r),size=2,col="white") +
  stat_function(fun = dbeta, args = list(shape1 = r+1, shape2 = n-r+1),size=2,col="white") +
  stat_function(fun = dbeta, args = list(shape1 = a, shape2 = b),size=2,col="red") +
  theme_classic() + 
  xlab(label="$\\theta$") +
  theme(
    axis.title.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.text.y = element_blank(),
    panel.border = element_blank(),
    axis.line.x = element_line(size = 0.5, linetype = "solid", colour = "black"),
    axis.line.y = element_line(size = 0.5, linetype = "solid", colour = "white")
  ) +
  annotate("text",.3,3.8,label="$p(\\theta)$",size=5,col="red") 
```
Encode the assumption that a drug has a response rate between 20% and 60%

---

exclude: true
count: false
# Bayesian modelling

## (Super) silly example: drug
.pull-left[
**Existing knowledge**
- Population registries
- Observational studies
- Small/pilot RCTs
- Expert opinion
]
.pull-right[
.alignright[
**Current data**
- Large(r) scale RCT
- Observational study
- Relevant summaries
]
]

`r vspace("-60px")`
```{r echo=FALSE,dev="tikz",out.width="33%",fig.width=4,fig.height=4,opts=list(width="33%",title="The evidence provided by the actual data under the current modelling assumptions can be represented by the likelihood function. Note that the sampling distribution is a function of the data for a fixed value of the parameters, so it would not be directly comparable with the prior. However, we can consider the likelihood function (which depends on the unknown model parameters, given fixed value of the data), which is defined on the same scale of the prior and the posterior")}
theta=seq(0,1,.001)
a=9.2
b=13.8
r=15
n=20
ggplot(data.frame(x = theta), aes(x = x)) + 
  stat_function(fun = dbeta, args = list(shape1 = a+r, shape2 = b+n-r),size=2,col="white") +
  stat_function(fun = dbeta, args = list(shape1 = a, shape2 = b),size=2,col="lightgray") +
  stat_function(fun = dbeta, args = list(shape1 = r+1, shape2 = n-r+1),size=2,col="red") +
  theme_classic() + 
  xlab(label="$\\theta$") +
  theme(
    axis.title.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.text.y = element_blank(),
    panel.border = element_blank(),
    panel.grid = element_blank(),
    axis.line.x = element_line(size = 0.5, linetype = "solid", colour = "black"),
    axis.line.y = element_line(size = 0.5, linetype = "solid", colour = "white")
   ) +
  annotate("text",.3,3.8,label="$p(\\theta)$",size=5,col="blue") +
  annotate("text",.88,4.2,label="$p(y \\mid \\theta)$",size=5,col="red") 
```
Observe a study with 150 responders out of 200 patients given the drug

---

exclude: true
count: false
# Bayesian modelling 

## (Super) silly example: drug

.pull-left[
**Existing knowledge**
- Population registries
- Observational studies
- Small/pilot RCTs
- Expert opinion
]
.pull-right[
.alignright[
**Current data**
- Large(r) scale RCT
- Observational study
- Relevant summaries
]
]

`r vspace("-60px")`
```{r echo=FALSE,dev="tikz",out.width="33%",fig.width=4,fig.height=4,opts=list(width="33%",title="The posterior distribution is generally a compromise between the prior and the likelihood. The more definitive the evidence provided by the data (and hence the likelihood), the closer the posterior to the likelihood function")}
theta=seq(0,1,.001)
a=9.2
b=13.8
r=15
n=20
ggplot(data.frame(x = theta), aes(x = x)) + 
  stat_function(fun = dbeta, args = list(shape1 = a, shape2 = b),size=2,col="lightgray") +
  stat_function(fun = dbeta, args = list(shape1 = r+1, shape2 = n-r+1),size=2,col="lightgray") +
  stat_function(fun = dbeta, args = list(shape1 = a+r, shape2 = b+n-r),size=2,col="red") +
  theme_classic() + 
  xlab(label="$\\theta$") +
  theme(
    axis.title.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.text.y = element_blank(),
    panel.border = element_blank(),
    panel.grid = element_blank(),
    axis.line.x = element_line(size = 0.5, linetype = "solid", colour = "black"),
    axis.line.y = element_line(size = 0.5, linetype = "solid", colour = "white")
   ) +
  annotate("text",.3,3.8,label="$p(\\theta)$",size=5,col="blue") +
  annotate("text",.88,4.2,label="$p(y \\mid \\theta)$",size=5,col="blue") +
  annotate("text",.6,5.4,label="$p(\\theta \\mid y)$",size=5,col="red") 
```
Update knowledge to describe revised "state of science"

---

exclude: true
# .small[*But how can I form a prior? I know **nothing** about this parameter!*...]

---

exclude: true
count: false
# .small[*But how can I form a prior? I know **nothing** about this parameter!*...]

<center><img src="img/Silvio.jpg" background-size: contain; title="This is an example about statistical modelling of political data. I am personally very interested in politics and, as an Italian, at some point I became fed up with my country, who decided that having Berlusconi as prime minister was a good idea. US President Obama's look while Berlusconi checks out the US First Lady is a good summary of my own opinion of the Italian PM...";></center>

---

exclude: true
count: false
# .small[*But how can I form a prior? I know **nothing** about this parameter!*...]

.pull-left[
<center><img src="img/chips.jpg" background-size: contain; title="So when I moved to the UK I was for a while reassured that I was living in a saner country. Until they also decided that somebody like Ms May was a good idea for a PM...";></center>
]

--

exclude: true
.pull-right[
<center><img src="img/ohdeargod.jpg" background-size: contain; title="And imagine my despair when they also decided that somebody like Mr Johnson was an even better idea for PM...";></center>
]

---

exclude: true
count: false
# .small[*But how can I form a prior? I know **nothing** about this parameter!*...]

- Predicting the output of the 2017 UK General Election using poll data (see [here](https://gianluca.statistica.it/post/2017-04-25-snap/) and subsequent posts)
  - Data: number of people out of the $N_i$ respondents in poll $i$ intending to vote for party $p$ (multinomial counts)    
  - **Objective of estimation**: $(\pi_1,\ldots,\pi_P)=$ population vote share for each party    
  - Can model $\pi_p = \left(\phi_p\middle / \sum \phi_p \right)$ and $\displaystyle \log(\phi_p) = \alpha_p + \beta_p X_p$

<center><img src="img/Election.png" width="40%" title="Anyway, the point is that we do have some knowledge about the thing we want to model in the first place... In the election example, we can pretend that we don't know anything, but this would actually mean that we would assume, before observing any data, that all the parties have more or less the same share of the vote. This is clearly not true (if anything based on the last election and the current parliament composition) and so we should encode this knowledge in our model"></center>

`r vspace("-2em")`
.small[.alignright[`r icon::fontawesome("arrow-circle-right")` [Next lecture](../02_BUGS/index.html)]]

---

<!-- LECTURE 2 -->

# Bayesian computation

.pull-left[
In artificially simplified modelling structures, Bayesian computations are just as easy as "standard" statistical models
   
- [Thomas Bayes](https://youtu.be/-e8wOcaascM) (1763) .alignright[`r emo::ji("backhand index pointing right")`] 
   - Set up (what we now call) a Binomial model for number of "successes" out of a set number of "trials"
   - Applied to billiard balls:  
   
- Pierre-Simon Laplace (1786)
   - Analysed data on christening in Paris from 1745 to 1770 using (what we now consider) a Bayesian model
   - Concludes that he was "morally certain" that $\Pr(`r sftext("new born is boy")`\mid `r sftext("data")`) \geq 0.5$ (divine providence to account for the fact that males died at higher rates...)
]

.pull-right[
<iframe width="560" height="315" src="https://www.youtube.com/embed/lAdSpsJ0vxk" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
]

---

count: false
name: video
# Bayesian computation

.pull-left[
But they can become very complicated in realistic models

- Alan Turing (1940s): [breaking the Enigma code](https://youtu.be/oTltncUkckQ) .alignright[`r emo::ji("backhand index pointing right")`] 
   - Using "prior" information and guess a stretch of letters in an Enigma message, measure their belief in the validity of these guesses and more clues as they arrived
       
Since the 1990s, rely on computer simulations and a suite of algorithms called **Markov Chain Monte Carlo** (MCMC)

- Highly generalisable, can throw at it virtually any complexity

- Can still be computationally intensive, but variants of "vanilla" implementations can be made **very** efficient
]
.pull-right[
<iframe width="560" height="315" src="https://www.youtube.com/embed/oTltncUkckQ" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
]

--

`r vspace("20px")`

Need to manipulate probability distributions to express both .red[**sampling variability**] and .olive[**epistemic uncertainty**]!

- Choose most appropriate distribution for the quantity of interest


---

# Beta distribution

General distribution representing uncertainty about a *proportion* or *probability* - values between *0 and 1*

.pull-left[
```{r, echo=F,fig.width=5,fig.height=5,out.width='105%',fig.align='center',dev='tikz',message=FALSE,warning=FALSE,cache=TRUE,opts=list(title="A Beta distribution is extremely versatile to represent uncertainty on quantites defined in the range 0-1. Upon varying the parameters of the distribution, we can get very different shapes indicating different levels of knowledge or uncertainty about the underlying value of the variable modelled using the Beta distribution",width="95%",dev="tikz")}
theta=seq(0,1,.001)
a=c(.5,5,1,15,5,150)
b=c(.5,5,1,5,1,50)
d=lapply(1:length(a),function(i) dbeta(theta,a[i],b[i]))
par(mfrow=c(3,2))
for (i in 1:length(a)) {
  plot(theta,d[[i]],t="l",lwd=3,xlab="",ylab="",axes=F,main="")
  mtext(side=1,line=2.5,"$\\theta$",cex=1.15)
  mtext(side=2,line=2.5,"Density",cex=1.0)
  mtext(side=3,line=1.5,paste("$a=",a[i],",b=",b[i],"$"),cex=1.25)
  axis(1);axis(2)
}
```
]

.pull-right[.center-right[
$\theta \sim `r sftext("Beta")`(a,b)$ has density
$$ p(\theta\mid a, b) = \frac{\Gamma(a+ b)}{ \Gamma(a)\Gamma(b) } \,\,\theta^{a-1}  (1-\theta)^{b-1} $$
Mean and variance:
\begin{align} 
\mu & =\frac{a}{a+ b }  \\\\
\sigma^2 &=  \frac{a b}{ (a+ b)^2 (a+ b+1)}
\end{align}   
]
]

---

count: false
name: beta-tricks
# Beta distribution

## Expressing beliefs as a Beta distribution

1. Define mean and SD

   - $`r sftext("Beta")`(a,b)$ has mean $\displaystyle \mu = \frac{a}{a+b}$, variance $\displaystyle \sigma^2 = \frac{ab}{(a+b)^2(a+b+1)}$
   - Solving gives $a,b$ in terms of assumed mean and SD:
   $$ a = \mu\left(\frac{(1 - \mu)\mu}{\sigma^2} - 1\right)$$
   $$ b = (1 - \mu)\left(\frac{(1 - \mu)\mu}{\sigma^2} - 1\right )$$
   eg mean 0.4, sd 0.1 gives Beta(9.2, 13.8)
  
--

2. Use an *implicit* dataset
   - Imagine your beliefs about the success rate $p$ are equivalent to observing, e.g. $y_0=8$ successes out of $n_0=20$ trials
   - This gives about $`r sftext("Beta")`(y_0+1, n_0-y_0+1)$ &ndash; see `r ref_lecture("mcmc","conjugacy")` for theory!
   - Mean $(y_0+1)/(n_0+2) \approx 0.4$ and SD $\approx 0.1$ here
   
---

count: false
# Beta distribution

.pull-left[
```{r echo=F,fig.width=5,fig.height=5,out.width='100%',fig.align='center',dev="tikz",message=FALSE,warning=FALSE,cache=TRUE,opts=list(title="Again, changing the values for the parameters a and b does modify the shape of the underlying Beta distribution. If we select a=20 and b=25, this is essentially equivalent to assuming a thought experiment that represents our uncertainty before seeing any data to a trial with 25 people of whom 25 experienced the event under consideration. The shape of the distribution is similar if we consider a=200 and b=250 (same as before but 10 times bigger). This is because we're now considering a prior based on an experiment with 200 'successes' out of 250 trials. So the underlying proportion of successes is the same (20/25=200/250), but we are now more confident, because we pretend to have observed 10 times as many people. This explains why the Beta(1,1) indicates complete ignorance - because it is akin to a thought experiment with 0 successes out of 0 trials")}
theta=seq(0,1,.001)
par(mfrow=c(2,2))
y=8;n=20
main=paste0("$y_0=",y,",n_0=",n,"$")
plot(theta,dbeta(theta,y+1,n-y+1),t="l",lwd=2,xlab="$\\theta$",ylab="Density",axes=F,main=main)
axis(1);axis(2)

y=20;n=25
main=paste0("$y_0=",y,",n_0=",n,"$")
plot(theta,dbeta(theta,y+1,n-y+1),t="l",lwd=2,xlab="$\\theta$",ylab="Density",axes=F,main=main)
axis(1);axis(2)
abline(v=(y+1)/(n+2),lty=2,lwd=2,col="blue")
lines(c(qbeta(.025,y+1,n-y+1),qbeta(.975,y+1,n-y+1)),c(0,0),lwd=4,col="blue")

y=200;n=250
main=paste0("$y_0=",y,",n_0=",n,"$")
plot(theta,dbeta(theta,y+1,n-y+1),t="l",lwd=2,xlab="$\\theta$",ylab="Density",axes=F,main=main)
axis(1);axis(2)

y=0; n=0
main=paste0("$y_0=",y,",n_0=",n,"$")
plot(theta,dbeta(theta,y+1,n-y+1),t="l",lwd=2,xlab="$\\theta$",ylab="Density",axes=F,main=main)
axis(1);axis(2)
```
]

.pull-right[
```{r,comment=NA,warning=FALSE,message=FALSE}
# Sets prior "successes" and "trials" 
y=20; n=25

# Computes the mean of the distribution
mean(rbeta(1000000,y+1,n-y+1))

# Computes summary statistics 
cbind("2.5%"=qbeta(.025,y+1,n-y+1),
      "median"=qbeta(.5,y+1,n-y+1),
      "97.5%"=qbeta(.975,y+1,n-y+1))
```


**NB**: $y_0=n_0=0 \Rightarrow$ "complete ignorance" *non-informative* prior &ndash; Beta(1,1) = Uniform(0,1)
]

---

name: gamma-distribution
# Gamma distribution

*Positive*, skewed quantities (eg costs, variance parameters)

.pull-left[
```{r echo=F,fig.width=5,fig.height=5,out.width='100%',fig.align='center',dev="tikz",message=FALSE,warning=FALSE,cache=TRUE,opts=list(width="95%",title="A Gamma is a skewed, positive distribution with two parameters a and b. Like for the Beta, changing their values gives us different shapes")}
maxval=c(5,15,5,15,5,40)
y=lapply(1:length(maxval),function(i) seq(0,maxval[i],.01))
a=c(1,3,0.1,30,3,10)
b=c(1,.5,.1,5,3,.5)
d=lapply(1:length(a),function(i) dgamma(y[[i]],a[i],b[i]))
par(mfrow=c(3,2))
for (i in 1:length(a)) {
  plot(y[[i]],d[[i]],t="l",lwd=3,xlab="",ylab="",axes=F,main="")
  mtext(side=1,line=2.5,"$y$",cex=1.15)
  mtext(side=2,line=2.5,"Density",cex=1.0)
  mtext(side=3,line=1.5,paste("$a=",a[i],",b=",b[i],"$"),cex=1.25)
  axis(1);axis(2)
}
```
]

.pull-right[.center-right[
If $Y \sim `r sftext("Gamma")`(a,b)$

\begin{align}
p(y\mid a, b) & = \frac{ b^a }{\Gamma(a) } y^{a-1} \; e^{-by}   \\\\
{\rm E}(Y \mid a, b) &= \frac{a}{ b }\\\\
{\rm V}(Y \mid a, b) &= \frac{a}{ b^2 }
\end{align}


`r icon::icon_style(icon::fontawesome("info-circle"),fill="blue")` log-Normal distribution is similar (but heavier tails than Gamma &ndash; see also `r ref_lecture("ild","gamma-lognormal")`!)
]
]

---

# *Doing* Bayesian analysis

## Broadly speaking, there are two types of Bayesian analysis:

**Forward sampling**  (Monte Carlo): this lecture
- Express current knowledge as parameters with distributions     
- Simulate parameters, make predictions from models based on the parameters     
- Like a spreadsheet with randomness on cells. Familiar in health economics as "probabilistic sensitivity analysis" (**see `r ref_lecture("intro_he")`**)    
- Doesn't really need specialised software

--

`r vspace("2em")`

**Model fitting** using Bayes Theorem (Markov Chain Monte Carlo): **see `r ref_lecture("mcmc")`** 
- Combine prior knowledge with *learning from data*    
- Searches for the unknown *posterior* distribution based on prior and data    
- Needs to use/programme specific software (eg `BUGS`)

---

count: false
# *Doing* Bayesian analysis

## The `BUGS` language

### `B`**ayesian analysis** `U`**sing** `G`**ibbs** `S`**ampling**

- Language for specifying Bayesian models as a *network* of *known and unknown* quantities


.pull-left[
eg linear regression
\begin{align}
Y_i & \sim `r sftext("Normal")`(\mu_i, \tau)\\
\mu_i & = \alpha + \beta x_i\\
\tau & = 1 / \sigma^2
\end{align}

```{r comment=NA,prompt=FALSE,eval=FALSE}
for (i in 1:N) {
  Y[i] ~ dnorm(mu[i], tau)
  mu[i] <- alpha + beta*x[i]
}
tau <- 1/(sigma*sigma)

# Prior knowledge 
alpha ...
beta ...
sigma ...
)
```
]

.pull-right[
Works by internally constructing *directed acyclic graph* - model code *equivalent* to a graph

<center><img src="img/line.png" width="650"></center>

Simulates distributions of unknowns conditional on prior distributions and data
]

---

count: false
# *Doing* Bayesian analysis 

### Different versions of `BUGS` 

- `WinBUGS` 1.4.3 
   - Original release 1997 &ndash; runs only on `Windows`
   - Stable but no longer developed (latest release: August 2007)
   - Freely available from <img src="img/WinBUGSlogo.jpg"; width="15"> [http://www.mrc-bsu.cam.ac.uk/bugs](http://www.mrc-bsu.cam.ac.uk/bugs)

- `OpenBUGS` <img src="img/openbugs.jpg"; width="15"> [http://www.openbugs.net](http://www.openbugs.net) 
   - Open-source offshoot, also runs on `Linux` and `MacOS`
   - Works just as well, stable

--

### "Rivals"/alternatives 

- `JAGS` [http://mcmc-jags.sourceforge.net](http://mcmc-jags.sourceforge.net) 
   - Language essentially identical, Work just as well, stable 
   - Runs natively on `Mac`/`Unix`/`Windows`

- `Stan` <img src="img/stan_logo.png"; width="15"> [http://mc-stan.org/](http://mc-stan.org/)
   - *Probabilistic* language &ndash; slightly different than `BUGS`/`JAGS`
   - Based on different algorithm &ndash; can be more efficient in some cases


Interfaces exist to run these from other software, eg `r icon::fontawesome("r-project")`  ([`R2OpenBUGS`](https://cran.r-project.org/web/packages/R2OpenBUGS/R2OpenBUGS.pdf), [`R2jags`](https://cran.r-project.org/web/packages/R2jags/R2jags.pdf), [`rstan`](https://cran.r-project.org/web/packages/rstan/rstan.pdf)) `Excel`, `S-Plus`, `SAS`, `Matlab`, `Stata`, ...


---

count: false
# *Doing* Bayesian analysis 

## A Bayesian workflow...

1. Pre-process data

   - Import dataset from spreadsheet
   - Create new variables
   - Subset data
   - ...

--

2. Sets up model
   - Code up distributional assumptions
   - Define initial values (**more on this in `r ref_lecture("mcmc")`!**)

--

3.  "Run" the model and obtain simulations from the target (posterior) distributions
   - Typically done using "Gibbs Sampling" (eg `BUGS`)
   - But other engines/MCMC algorithms/approximation methods available

--

4. Use simulations to summarise results
   - Make histograms of target (posterior) distributions
   - Compute means, sd, medians, quantiles of target (posterior) distributions
   - Derive distributions for functions of original parameters $g(\theta)$ &ndash; **more on this in `r ref_lecture("ald")`!** 
   
---

# Some aspects of the `BUGS` language

Not a conventional programming language 

- `BUGS` is for *describing a model*
   - ***not*** for performing a sequence of tasks in order

- Every line defines a model quantity in relation to others  

> ### Random (stochastic) dependence
>
> e.g.:  <tt style = "font-family:inconsolata; color: #143455;">r ~ dunif(a,b)</tt> 

- Simulate data $r$ from model, or fit model to observed data $r$

> ### Fixed (logical) dependence
>
> e.g.: <tt style = "font-family:inconsolata; color: #143455;">m <- a + b*x</tt>

- Define any quantity as deterministic function of another (as in a spreadsheet)

---

# Functions in the `BUGS` language

Use in definitions of logical quantities, eg mathematical functions

- .red[`tau <- 1 / pow(s,2)`] sets $\tau = 1/s^2$
- .red[`s   <- 1 / sqrt(tau)`] sets $s = 1/\sqrt{\tau}$

Useful data processing tricks, eg
- .red[`p <- step(x - 0.7)`]  = 1 if `x` $\ge$ 0.7, 0 otherwise. Hence monitoring `p` and recording its mean will give the
probability that `x` $\ge$ 0.7
- .red[`p <- equals(x, 0.7)`]  = 1 if `x` $=$ 0.7, 0 otherwise


See "Model Specification/Logical nodes" in manual for full syntax

---

# Some common distributions

```{r echo=F,message=F,error=F}
library(knitr)
library(kableExtra)
tab=tibble(
  expression=c("dbin","dnorm","dpois","dunif","dgamma"), 
  distribution=c("Binomial","Normal","Poisson","Uniform","Gamma"), 
  usage=c("r ~ dbin(p, n)","x ~ dnorm(mu, tau)","r ~ dpois(lambda)","x ~ dunif(a, b)","x ~ dgamma(a, b)")
)
tab %>% kable(col.names=c("Expression","Distribution","Usage")) %>% 
  kable_classic() %>% 
  kable_styling(full_width = F) %>% 
  column_spec(c(1,3),extra_css="font-family: 'Inconsolata';") %>% 
  row_spec(0,bold=TRUE,extra_css="border-top: 2px solid;") %>% 
  row_spec(5,extra_css="border-bottom: 2px solid;")
```

`r vspace("1em")`

- **NB**: The normal is parameterised in terms of its mean and ***precision*** = 1/ variance = $1/\sd^2$ 

- Functions cannot be used as arguments in distributions (you need to create new nodes)

See "Model Specification/The `BUGS` language: stochastic nodes/Distributions" in manual for full syntax

---

# Arrays and loops in `BUGS`

Use arrays and loops for sets of related quantities

```{r comment=NA,eval=FALSE,prompt=FALSE}
for (i in 1:n) {
  r[i] ~ dbin(p[i],n[i])
  p[i] ~ dunif(0,1)
}
```

Array functions: eg `mean(p[])` to take mean of whole array, `mean(p[m:n])` to take mean of elements `m` to `n`.  Similarly, `sum(p[])`


See "Hints on using `OpenBUGS`" handouts, or the `OpenBUGS` manual for full information or `BUGS` syntax

---

# Forward sampling

- Consider a drug to be given for relief of chronic pain
- Experience with similar compounds has suggested that annual response rates between 0.2 and 0.6 could be feasible
- Interpret this as a distribution with mean = 0.4 and standard deviation = 0.1

```{r echo=FALSE,comment=NA,warning=FALSE,error=FALSE,message=FALSE,fig.width=7,fig.height=5,out.width="50%",fig.align='center',dev="tikz",opts=list(width="48%",title="A Beta with parameters a=9.2 and b=13.8 encodes the assumption that the mean is about 0.4 and that most of the distribution is included in the interval between 0.2 and 0.6")}
plot(seq(0,1,.001),dbeta(seq(0,1,.001),9.2,13.8),t="l",axes=F,xlab="Probability of success",ylab="")
axis(1)

# a=9.2
# b=13.8
# ggplot(data.frame(x = seq(0,1,.001)), aes(x = x)) + 
#   stat_function(fun = dbeta, args = list(shape1 = a, shape2 = b), size=2) + 
#   stat_function(fun = dbeta, args = list(shape1 = a, shape2 = b), 
#                 xlim = c(0,qbeta(.025,a,b)), 
#                 geom = "area", fill = "steelblue", alpha = .2) +
#   stat_function(fun = dbeta, args = list(shape1 = a, shape2 = b), 
#                 xlim = c(qbeta(.975,a,b),1), 
#                 geom = "area", fill = "steelblue", alpha = .2) +
#   scale_x_continuous(name = "$\\theta$", breaks = seq(0,1,.2)) +
#   scale_y_continuous(name = "") + 
#   theme_classic() +
#   theme(axis.ticks.y=element_blank(),
#         axis.text.y=element_blank(),
#         axis.line.y = element_line(size = 0.5, linetype = "solid", colour = "white")
#   )
```

A **.red[Beta(9.2,13.8)]** distribution has these properties 

---

count: false
# Forward sampling 
`r vspace("-20px")`
### Prior *knowledge* vs prior *distribution*

- Consider a drug to be given for relief of chronic pain
- Experience with similar compounds has suggested that annual response rates between 0.2 and 0.6 could be feasible
- Interpret this as a distribution with mean = 0.4 and standard deviation = 0.1

```{r echo=FALSE,comment=NA,warning=FALSE,error=FALSE,message=FALSE,fig.width=7,fig.height=5,out.width="50%",fig.align='center',dev="tikz",opts=list(width="48%",title="But a Normal distribution with parameters mean=-0.40 and sd=0.41, when rescaled on the logit scale, encodes pretty much the exact same information!")}
ln=rnorm(10000,logit(.4),0.413)
hist(ilogit(ln),main="",xlim=c(0,1),xlab="Probability of success",ylab="",freq=F,axes=F,col="dark grey",border="light grey")
axis(1)
points(seq(0,1,.001),dbeta(seq(0,1,.001),9.2,13.8),t="l",lwd=3,col="blue")
legend("topright",c("$\\mbox{log}\\left(\\frac{\\theta}{1-\\theta}\\right) \\sim \\mbox{Normal}(-0.405,0.413)$"," ","$\\theta \\sim \\mbox{Beta}(9.2,13.8)$"),
       bty="n",col=c("dark grey","white","blue"),lty=1,lwd=7,cex=1.28)
```

**But**: there are many possible ways to encode this prior information. For example, one could use a **.red[Normal distribution on the logit scale]**!

---

# Forward sampling

## Making predictions

1. Model sampling variability of $y\mid\theta$ and uncertainty on $\theta$
2. **Propagate** uncertainty in the success rate $\theta$
3. Compute the *.red[predictive]* distribution of $y$: averaged over uncertainty about $\theta$

.myblue[$$p(y) = \int p(y\mid\theta) p (\theta) d\theta$$]

--

For instance, we can model 
- $y\mid \theta\sim `r sftext("Binomial")`(\theta,n)$: "natural" model for sampling variability
- $\theta \sim `r sftext("Beta")`(a,b)$: convenient model for epistemic uncertainty

In `BUGS`:
```{r comment=NA,prompt=FALSE,eval=FALSE}
model {
  theta ~ dbeta(a, b)
  y ~ dbin(theta, n)
}
```

---

count: false 

# Forward sampling .subtitle[Making predictions]

.panelset[
.panel[
.panel-name[`R` Code]
```{r echo=TRUE}
# Sets up the parameters for the Beta prior
a=9.2
b=13.8

# Then simulates 1000 random samples from the prior
theta=rbeta(n=10000,a,b)

# Now "mixes" **uncertainty** in the value of the parameter 
# with **variability** in the data sampling distribution
y=rbinom(n=10000,size=20,prob=theta)
```
]
.panel[
.panel-name[Output]
.pull-left[
```{r echo=FALSE,dev="tikz",fig.width=6,fig.height=5,opts=list(width="90%",title="The prior distribution is defined on the scale of the parameter, so in this case the range 0-1 (because the parameter is a probability of success)")}
plot(seq(0,1,.01),dbeta(seq(0,1,.01),a,b),t="l",axes=F,xlab="$\\theta$",ylab="$p(\\theta)$",main="(a)")
axis(1); axis(2)
```
]
.pull-right[
```{r echo=FALSE,dev="tikz",fig.width=6,fig.height=5,opts=list(width="90%",title="The predictive distribution is defined on the scale of the actual data (in this case the positive integers up to 20)")}
barplot(prop.table(table(y)),xlab="$y$",ylab="$p(y)$",main="(b)")
```
]

(a) is the Beta (prior) distribution 

(b) is the predictive **.olive[Beta-Binomial]** distribution of the number of successes in the next 20 trials
]
]

---

exclude: true

# Forward sampling .subtitle[Making predictions]

.pull-left[
```{r echo=FALSE,comment=NA,warning=FALSE,error=FALSE,message=FALSE,fig.width=6,fig.height=5,dev="tikz",opts=list(width="85%",title="INSERT TEXT HERE")}
plot(seq(0,1,.001),dbeta(seq(0,1,.001),9.2,13.8),t="l",axes=F,xlab="Probability of success",ylab="")
axis(1)
```
]
.pull-right[
```{r echo=FALSE,comment=NA,warning=FALSE,error=FALSE,message=FALSE,fig.width=6,fig.height=5,dev="tikz",opts=list(width="85%",title="INSERT TEXT HERE")}
theta=rbeta(10000,9.2,13.8)
ypred=rbinom(10000,20,theta)
tab=table(ypred)
h=hist(ypred,plot=FALSE)
barplot(h$density,names.arg=h$mids-.5,xlab="Number of successes")
```
]


(a) is the Beta (prior) distribution for $\theta$

(b) is the predictive **.olive[Beta-Binomial]** distribution of the number of successes $y$ in the next 20 trials

---

# Forward sampling 

## Using MC to estimate tail area probabilities

- What is the chance of getting 15 or more responders?
   - $\theta \sim `r sftext("Beta")`(9.2, 13.8)$: prior distribution
   
   - $y \sim `r sftext("Binomial")`(\theta, 20)$: sampling distribution
   
   - $P_{\rm crit} = \Pr(y \ge 15)$: probability of exceeding critical threshold


--

- In `BUGS` can code by translating the equations
```{r comment=NA,eval=FALSE,prompt=FALSE}
# In BUGS syntax
 model {
   theta ~ dbeta(9.2, 13.8)   # prior distribution
   y ~ dbin(theta, 20)        # sampling distribution
   P.crit <- step(y - 14.5)   # = 1 if y >=15, 0 otherwise
 }
```

- **NB**: in `BUGS`, statements can be given in any order!

---

# Forward sampling 

## `OpenBUGS` output and exact answer

```{r comment=NA,eval=FALSE,prompt=FALSE}
 node     mean    sd     MC error    2.5%    median  97.5% start sample
 theta   0.4008  0.09999 9.415E-4    0.2174  0.3981  0.6044  1   10000
 y       8.058   2.917   0.03035     3.0     8.0     14.0    1   10000
 P.crit  0.0151  0.122   0.001275    0.0     0.0     0.0     1   10000
```

**NB**: Mean of the 0-1 indicator `P.crit`: estimated tail-area probability

Exact answers from closed-form algebra:
- $\theta$:  mean 0.4 and standard deviation  0.1
- $y$:       mean 8 and standard deviation  2.92
-  Probability of at least 15:  0.015

MC error $\approx$ $`r sftext("sd")`/\sqrt{`r sftext("No. iterations")`}$ = std. error for *estimate of* mean

Can achieve arbitrary accuracy by running the simulation for longer

---

# Forward sampling 

## `OpenBUGS` output

`r include_fig("drug-MC.png",width="650",title="The BUGS output can show different metrics to assess the results, including traceplots (more on this in the next lecture) and histograms or densities for the relevant quantities")`

Independent samples, so no concern with convergence (More on this later...)

---

# `OpenBUGS` script

## Drug: Monte Carlo example

Run from `Model/Script` menu
.small[
```{r comment=NA,eval=FALSE,prompt=FALSE}
modelDisplay('log')                      # set up log file
modelCheck('c:/bugscourse/drug-MC')      # check syntax of model
#  modelData('c:/bugscourse/drug-data')  # load data file if there is one
modelCompile(1)                          # generate code for 1 simulations
# modelInits('c:/bugscourse/drug-in1',1) # load initial values if necessary
modelGenInits()                          # generate initial values for all unknown 
                                         # quantities not given initial values
samplesSet(theta)                        # monitor the true response rate
samplesSet(y)                            # monitor predicted number of successes
samplesSet(P.crit)                       # monitor whether a critical number of successes
samplesTrace("*")                        # watch some simulated values (NB: slows simulation!)
modelUpdate(10000)                       # perform 10000 simulations
samplesHistory(theta)                    # Trace plot of samples for theta
samplesStats("*")                        # Summary statistics for all monitored quantities
samplesDensity(theta)                    # Plot distribution of theta
samplesDensity(y)                        # Plot distribution of y
```
]

Automates mouse clicks: important analyses should be *.red[repeatable]* (**But** effectively superseded by more effective tools, eg `R2OpenBUGS`!)


.small[(warning: script commands different between `OpenBUGS` and `WinBUGS`)]

.small[.alignright[`r icon::fontawesome("arrow-circle-right")` [Next lecture](../02_MCMC/index.html)]]

