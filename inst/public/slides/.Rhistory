m1=statins_base
m1
R2jags:::print.rjags()
R2jags:::print.rjags
x=statins_base
x <- x$BUGSoutput
x=statins_base
x <- x$BUGSoutput
sims.matrix <- x$sims.matrix
mu.vect <- apply(sims.matrix, 2, mean)
sd.vect <- apply(sims.matrix, 2, sd)
int.matrix <- apply(sims.matrix, 2, quantile, intervals)
if (x$n.chains > 1) {
n.eff <- x$summary[, "n.eff"]
Rhat <- x$summary[, "Rhat"]
} else {
n.eff <- Rhat <- NULL
}
summaryMatrix <- t(rbind(mu.vect, sd.vect, int.matrix, Rhat, n.eff))
rownameMatrix <- rownames(summaryMatrix)
dev.idx <- match("deviance", rownameMatrix)
if (any(!is.na(dev.idx))) {
summaryMatrix <- rbind(summaryMatrix[-dev.idx, ], summaryMatrix[dev.idx, ])
rownames(summaryMatrix) <- c(rownameMatrix[-dev.idx], rownameMatrix[dev.idx])
}
if (!is.null(x$model.file))
cat("Inference for Bugs model at \"", x$model.file, "\", ", sep = "")
if (!is.null(x$program))
cat("fit using ", x$program, ",", sep = "")
cat("\n ", x$n.chains, " chains, each with ", x$n.iter, " iterations (first ", x$n.burnin, " discarded)", sep = "")
if (x$n.thin > 1)
cat(", n.thin =", x$n.thin)
cat("\n n.sims =", x$n.sims, "iterations saved\n")
print(round(summaryMatrix, digits), ...)
if (x$n.chains > 1) {
cat("\nFor each parameter, n.eff is a crude measure of effective sample size,")
cat("\nand Rhat is the potential scale reduction factor (at convergence, Rhat=1).\n")
}
if (x$isDIC) {
msgDICRule <- ifelse(x$DICbyR, "(using the rule, pD = var(deviance)/2)",
"(using the rule, pD = Dbar-Dhat)")
cat(paste("\nDIC info ", msgDICRule, "\n", sep = ""))
if (length(x$DIC) == 1) {
cat("pD =", fround(x$pD, 1), "and DIC =", fround(x$DIC,
1))
}
else if (length(x$DIC) > 1) {
print(round(x$DIC, 1))
}
cat("\nDIC is an estimate of expected predictive error (lower deviance is better).\n")
}
x <- x$BUGSoutput
sims.matrix <- x$sims.matrix
mu.vect <- apply(sims.matrix, 2, mean)
sd.vect <- apply(sims.matrix, 2, sd)
int.matrix <- apply(sims.matrix, 2, quantile, intervals)
if (x$n.chains > 1) {
n.eff <- x$summary[, "n.eff"]
Rhat <- x$summary[, "Rhat"]
} else {
n.eff <- Rhat <- NULL
}
summaryMatrix <- t(rbind(mu.vect, sd.vect, int.matrix, Rhat, n.eff))
x
x=statins_base
x
class(x)
x=statins_base
sims.matrix <- x$sims.matrix
sims.matrix
mu.vect <- apply(sims.matrix, 2, mean)
sd.vect <- apply(sims.matrix, 2, sd)
int.matrix <- apply(sims.matrix, 2, quantile, intervals)
x$n.chains > 1
if (x$n.chains > 1) {
n.eff <- x$summary[, "n.eff"]
Rhat <- x$summary[, "Rhat"]
} else {
n.eff <- Rhat <- NULL
}
summaryMatrix <- t(rbind(mu.vect, sd.vect, int.matrix, Rhat, n.eff))
summaryMatrix <- t(rbind(mu.vect, sd.vect, int.matrix, Rhat, n.eff))
int.matrix <- apply(sims.matrix, 2, quantile, intervals)
int.matrix <- apply(sims.matrix, 2, quantile, c(.025,.975))
if (x$n.chains > 1) {
n.eff <- x$summary[, "n.eff"]
Rhat <- x$summary[, "Rhat"]
} else {
n.eff <- Rhat <- NULL
}
summaryMatrix <- t(rbind(mu.vect, sd.vect, int.matrix, Rhat, n.eff))
summaryMatrix
summaryMatrix[1:3,]
rownameMatrix <- rownames(summaryMatrix)
dev.idx <- match("deviance", rownameMatrix)
if (any(!is.na(dev.idx))) {
summaryMatrix <- rbind(summaryMatrix[-dev.idx, ], summaryMatrix[dev.idx, ])
rownames(summaryMatrix) <- c(rownameMatrix[-dev.idx], rownameMatrix[dev.idx])
}
if (!is.null(x$model.file))
cat("Inference for Bugs model at \"", x$model.file, "\", ", sep = "")
if (!is.null(x$program))
cat("fit using ", x$program, ",", sep = "")
cat("\n ", x$n.chains, " chains, each with ", x$n.iter, " iterations (first ", x$n.burnin, " discarded)", sep = "")
if (x$n.thin > 1)
cat(", n.thin =", x$n.thin)
cat("\n n.sims =", x$n.sims, "iterations saved\n")
print(round(summaryMatrix, digits), ...)
if (x$n.chains > 1) {
cat("\nFor each parameter, n.eff is a crude measure of effective sample size,")
cat("\nand Rhat is the potential scale reduction factor (at convergence, Rhat=1).\n")
}
if (x$isDIC) {
msgDICRule <- ifelse(x$DICbyR, "(using the rule, pD = var(deviance)/2)",
"(using the rule, pD = Dbar-Dhat)")
cat(paste("\nDIC info ", msgDICRule, "\n", sep = ""))
if (length(x$DIC) == 1) {
cat("pD =", fround(x$pD, 1), "and DIC =", fround(x$DIC,
1))
}
else if (length(x$DIC) > 1) {
print(round(x$DIC, 1))
}
cat("\nDIC is an estimate of expected predictive error (lower deviance is better).\n")
}
x
x$sims.matrix %>% dim()
x$sims.matrix |> dim()
x$sims.matrix = x$sims.matrix[1:3,]
print(x)
library(bmhe)
help("print.rjags")
ls()
x
x$summary
x$summary[1:3]
x$summary[1:3,]
library(dplyr)
x$summary %>% select(-c("25%","50%","%75%"))
x$summary %>% as_tibble() %>%  select(-c("25%","50%","%75%"))
x$summary
x$summary %>% head()
x$summary %>% as_tibble() %>%  select(-c("25%","50%","75%"))
x$summary[,1:3,-c("25%","50%","75%")]
x$summary[1:3,-c("25%","50%","75%")]
colnames(x$summary)
x$summary[,-c("sd")]
x$summary[,-c(4,5,6)]
x$summary[1:3,-c(4:6)]
R2jags:::print.rjags()
R2jags:::print.rjags(
R2jags:::print.rjags
cat("Inference for Bugs model at \"", x$model.file, "\", ", sep = "")
cat("Inference for Bugs model at model.txt\", ", sep = "")
cat("Inference for Bugs model at \"model.txt\", ", sep = "")
cat("Inference for Bugs model at \"model.txt\", ", sep = "")
cat("fit using ", x$program, ",", sep = "")
cat("\n ", x$n.chains, " chains, each with ", x$n.iter, " iterations (first ", x$n.burnin, " discarded)", sep = "")
xaringan:::inf_mr()
xaringan:::inf_mr()
cat("Inference for Bugs model at \"model.txt\", fit using ", x$program, ",", x$n.chains, " chains, each with ", x$n.iter, " iterations")
cat("first ", x$n.burnin, " discarded)", sep = "")
format
help(format)
R2jags:::print.rjags
x$pD
cat("DIC info (using the rule, pD = var(deviance)/2)\npD = ",format(x$pD,digits=2,nsmall=1))
cat("DIC info (using the rule, pD = var(deviance)/2)\npD = ",format(x$pD,digits=2,nsmall=1)," and DIC = ",format(x$DIC,digits=2,nsmall=1))
cat("DIC info (using the rule, pD = var(deviance)/2)\npD = ",format(x$pD,digits=2,nsmall=1)," and DIC = ",format(x$DIC,digits=2,nsmall=1),"\nDIC is an estimate of expected predictive error (lower deviance is better")
ls()
load("../../content/practical/07_structural/statins_base.Rdata")
ls()
load("../../content/practical/07_structural/statins_HC.Rdata.Rdata")
load("../../content/practical/07_structural/statins_HC.Rdata")
ls()
x
library(BCEA)
x=m2=statins_HC
x=m1=statins_base
library(BCEA)
# Objects containing the MCMC simulations from the posteriors for the two models
m1.sims <- m1$sims.list;
m2.sims <- m2$sims.list
# Defines suitable variables of clinical benefits & costs
e1 <- m1.sims$effect;
e2 <- m2.sims$effect
c1 <- m1.sims$cost.tot;
c2 <- m2.sims$cost.tot
plot(m1)
plot(avg$he)
m1
plot(m1)
plot(m2)
plot(m3)
# Finally uses BCEA to perform the structural PSA to consider the base and HC models
m3 <- struct.psa(models,effects,costs,ref=1,interventions=interventions)
plot(m3)
m3
m3$he
plot(m3$he)
m3$w
xaringan:::inf_mr()
summary(m1)
summary(m1)
BCEA:::summary.bcea
m1$Kmax
BCEA:::summary.bcea
wtp=25000
cat(paste0("Analysis for willingness to pay parameter k = ", wtp, "\n"))
cat("\n")
print(EU_tab, quote = FALSE, digits = 5, justify = "center")
he=m2
Table <- BCEA:::sim_table.bcea(he)$Table
EU_tab <- matrix(NA, he$n_comparators, 1)
EU_tab[, 1] <- unlist(Table[he$n_sim + 1, paste0("U", 1:he$n_comparators)])
colnames(EU_tab) <- "Expected utility"
rownames(EU_tab) <- he$interventions
cat(paste0("Analysis for willingness to pay parameter k = ", wtp, "\n"))
cat("\n")
print(EU_tab, quote = FALSE, digits = 5, justify = "center")
cat("\n")
print(comp_tab, quote = FALSE, digits = 5, justify = "center")
wtp=25000
he=m2
Table <- BCEA:::sim_table.bcea(he)$Table
EU_tab <- matrix(NA, he$n_comparators, 1)
EU_tab[, 1] <- unlist(Table[he$n_sim + 1, paste0("U", 1:he$n_comparators)])
colnames(EU_tab) <- "Expected utility"
rownames(EU_tab) <- he$interventions
comp_tab <- matrix(NA, he$n_comparisons, 3)
comp_tab[, 1] <- unlist(Table[he$n_sim + 1, paste0("IB", he$ref, "_", he$comp)])
if (he$n_comparisons == 1) {
comp_tab[, 2] <- sum(Table[1:he$n_sim, paste0("IB", he$ref, "_", he$comp)] > 0)/he$n_sim
comp_tab[, 3] <- he$ICER
}
if (he$n_comparisons > 1) {
for (i in seq_len(he$n_comparisons)) {
comp_tab[i, 2] <- sum(Table[1:he$n_sim, paste0("IB", he$ref, "_", he$comp[i])] > 0)/he$n_sim
comp_tab[i, 3] <- he$ICER[i]
}
}
colnames(comp_tab) <- c("EIB", "CEAC", "ICER")
rownames(comp_tab) <- paste0(he$interventions[he$ref], " vs ", he$interventions[he$comp])
evpi_tab <- matrix(NA, 1, 1)
evpi_tab[, 1] <- Table[he$n_sim + 1, "VI"]
rownames(evpi_tab) <- "EVPI"
colnames(evpi_tab) <- ""
cat(paste0("Analysis for willingness to pay parameter k = ", wtp, "\n"))
cat("\n")
print(EU_tab, quote = FALSE, digits = 5, justify = "center")
cat("\n")
print(comp_tab, quote = FALSE, digits = 5, justify = "center")
cat("\n")
cat(paste0("Optimal intervention (max expected utility) for k = ", wtp, ": ", he$interventions[m1$best][m1$k == wtp], "\n"))
print(evpi_tab, quote = FALSE, digits = 5, justify = "center")
xaringan:::inf_mr()
xaringan:::inf_mr()
library(BCEA)
PSA = createInputs(vaccine)
ls()
data(vaccine)
library(BCEA)
data(vaccine)
data(vaccines)
data(Vaccine)
createInputs(Vaccine)
createInputs(vaccine)
ls()
createInputs(vaccine_mat)
ls()
c
ls9)
ls()
xaringan:::inf_mr()
library(BCEA)
m = bcea(e,c,interventions=treats)
ls()
data(Vaccine)
m = bcea(e,c,interventions=treats)
m = bcea(e,c,interventions=treats,ref=2)
PSA = createInputs(vaccine_mat)
VoI = evppi(c("beta.1"),PSA$mat,m)
VoI = evppi(m,c("beta.1"),PSA$mat)
PSA
VoI = evppi(m,c("beta.1."),PSA$mat)
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
tab=tibble(
requirements=c(
"Decision-Analytic Model",
"Probabilistic sensitivity analysis",
"Simulations of the expected net benefit conditional on \\(\\theta\\) (required to compute EVPPI)"
),
rb=c(
"",
"\\(\times\\)",
"",
""
),
is=c(
"",
"\\(\times\\)",
"\\(\times\\)",
""
),
ga=c(
"",
"\\(\times\\)",
"",
""
),
mm=c(
"\\(\times\\)",
"\\(\times\\)",
"\\(\times\\)",
""
)
)
tab
tab=tibble(
requirements=c(
"Decision-Analytic Model",
"Probabilistic sensitivity analysis",
"Simulations of the expected net benefit conditional on \\(\\theta\\) (required to compute EVPPI)"
),
rb=c(
"",
"\\(\times\\)",
""
),
is=c(
"",
"\\(\times\\)",
"\\(\times\\)"
),
ga=c(
"",
"\\(\times\\)",
""
),
mm=c(
"\\(\times\\)",
"\\(\times\\)",
"\\(\times\\)"
)
)
tab
tab %>% kable(col.names="Requirements","RB","IS","GA","MM")
tab %>% kable(col.names=c("Requirements","RB","IS","GA","MM"))
xaringan:::inf_mr()
xaringan:::inf_mr()
richards %>% ggplot(aes(x,y,color=group))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("")+
labs(title="Before Richards trial (willingness to pay = £20 000",color="")+geom_point()+
scale_color_manual("",labs=c("Total trial costs","ENBS","Population EVSI"))
richards %>% ggplot(aes(x,y,color=group))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("")+
labs(title="Before Richards trial (willingness to pay = £20 000",color="")+geom_point()+
scale_color_manual(
values=c("Cost"="red","ENBS"="black","popEVSI"="blue"),
labs=c("Total trial costs","ENBS","Population EVSI")
)
richards %>% ggplot(aes(x,y,color=group))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("")+
labs(title="Before Richards trial (willingness to pay = £20 000",color="")+geom_point()+
scale_color_manual(
values=c("Cost"="red","ENBS"="black","popEVSI"="blue"),
labels=c("Total trial costs","ENBS","Population EVSI")
)
richards=readxl::read_xlsx("img/richards.xlsx",sheet="before-after") %>% as_tibble()
richards=readxl::read_xlsx("~/Dropbox/EcSan/ShortCourses/Lausanne/static/slides/13_EVSI/img/richards.xlsx",sheet="before-after") %>% as_tibble()
richards
richards
richards=readxl::read_xlsx("~/Dropbox/EcSan/ShortCourses/Lausanne/static/slides/13_EVSI/img/richards.xlsx",sheet="before-after") %>% as_tibble()
richards
richards %>% ggplot(aes(x,y,color=Time))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("")+
labs(title="ENBS - before and after the Richards study (willingness to pay = £20 000",color="")+geom_point()+
```
richards=readxl::read_xlsx("img/richards.xlsx",sheet="before-after") %>% as_tibble()
richards=readxl::read_xlsx("~/Dropbox/EcSan/ShortCourses/Lausanne/static/slides/13_EVSI/img/richards.xlsx",sheet="before-after") %>% as_tibble()
richards
richards %>% ggplot(aes(x,y,color=Time))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("")+
labs(title="ENBS - before and after the Richards study (willingness to pay = £20 000",color="")+geom_point()+
```
richards %>% ggplot(aes(x,y,color=Time))
richards %>% ggplot(aes(x,y,color=Time))+geom_line()
richards=readxl::read_xlsx("~/Dropbox/EcSan/ShortCourses/Lausanne/static/slides/13_EVSI/img/richards.xlsx",sheet="before-after") %>% as_tibble()
richards %>% ggplot(aes(x,y,color=Time))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("")+
labs(title="ENBS - before and after the Richards study (willingness to pay = £20 000",color="")+geom_point()+
```
richards %>% ggplot(aes(x,y,color=Time))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("")
richards
richards=readxl::read_xlsx("~/Dropbox/EcSan/ShortCourses/Lausanne/static/slides/13_EVSI/img/richards.xlsx",sheet="before-after") %>% as_tibble()
richards %>% ggplot(aes(x,y,color=Time))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("")+
labs(title="ENBS - before and after the Richards study (willingness to pay = £20 000",color="")+geom_point()+
```
richards %>% ggplot(aes(x,y,color=Time))+geom_line()+theme_bw()
richards=readxl::read_xlsx("~/Dropbox/EcSan/ShortCourses/Lausanne/static/slides/13_EVSI/img/richards.xlsx",sheet="before-after") %>% as_tibble()
richards %>% ggplot(aes(x,y,color=Time))+geom_line()+theme_bw()
richards=readxl::read_xlsx("~/Dropbox/EcSan/ShortCourses/Lausanne/static/slides/13_EVSI/img/richards.xlsx",sheet="before-after") %>% as_tibble()
richards %>% ggplot(aes(x,y,color=Time))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("")+
labs(title="ENBS - before and after the Richards study (willingness to pay = £20 000",color="")+geom_point()+
```
richards %>% ggplot(aes(x,y,color=Time))+geom_line()+theme_bw()
richards %>% ggplot(aes(x,y,color=Time))+geom_line()+theme_bw()+
xlab("Number of practices per arm")
richards %>% ggplot(aes(x,y,color=Time))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("ENBS")
richards %>% ggplot(aes(x,y,color=Time))+geom_line()+theme_bw()
richards=readxl::read_xlsx("~/Dropbox/EcSan/ShortCourses/Lausanne/static/slides/13_EVSI/img/richards.xlsx",sheet="before-after") %>% as_tibble()
richards %>% ggplot(aes(x,y,color=Time))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("ENBS")
richards %>% ggplot(aes(x,y,color=Time))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("ENBS")+
labs(title="ENBS - before and after the Richards study (willingness to pay = £20 000",color="")
scales::dollar_format(prefix="£")
richards=readxl::read_xlsx("~/Dropbox/EcSan/ShortCourses/Lausanne/static/slides/13_EVSI/img/richards.xlsx",sheet="before") %>% as_tibble()
richards %>% ggplot(aes(x,y,color=Time))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("ENBS")+
labs(title="ENBS - before and after the Richards study (willingness to pay = £20 000",color="")+geom_point()+
scale_y_continuous(labels=scales::dollar_format(prefix="£")) +
geom_hline(yintercept = 0)
richards %>% ggplot(aes(x,y,color=group))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("")+
labs(title="Before Richards trial (willingness to pay = £20 000",color="")+geom_point()+
scale_color_manual(
values=c("Cost"="red","ENBS"="black","popEVSI"="blue"),
labels=c("Total trial costs","ENBS","Population EVSI")+
scale_y_continuous(labels=scales::dollar_format(prefix="£")) +
geom_hline(yintercept = 0)
richards %>% ggplot(aes(x,y,color=group))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("")+
labs(title="Before Richards trial (willingness to pay = £20 000",color="")+geom_point()+
scale_color_manual(
values=c("Cost"="red","ENBS"="black","popEVSI"="blue"),
labels=c("Total trial costs","ENBS","Population EVSI")+
scale_y_continuous(labels=scales::dollar_format(prefix="£")) +
geom_hline(yintercept = 0)
)
richards %>% ggplot(aes(x,y,color=group))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("")+
labs(title="Before Richards trial (willingness to pay = £20 000")+geom_point()+
scale_color_manual(
values=c("Cost"="red","ENBS"="black","popEVSI"="blue"),
labels=c("Total trial costs","ENBS","Population EVSI")+
scale_y_continuous(labels=scales::dollar_format(prefix="£")) +
geom_hline(yintercept = 0)
)
richards %>% ggplot(aes(x,y,color=group))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("")+
labs(title="Before Richards trial (willingness to pay = £20 000",color="")+geom_point()+
scale_color_manual(
values=c("Cost"="red","ENBS"="black","popEVSI"="blue"),
labels=c("Total trial costs","ENBS","Population EVSI"))+
scale_y_continuous(labels=scales::dollar_format(prefix="£")) +
geom_hline(yintercept = 0)
richards=readxl::read_xlsx("~/Dropbox/EcSan/ShortCourses/Lausanne/static/slides/13_EVSI/img/richards.xlsx",sheet="groups") %>% as_tibble()
richards
richards %>% ggplot(aes(x,y,color=group))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("ENBS")+
labs(title="ENBS - decision population (willingness to pay = £20 000",color="")+geom_point()+
scale_y_continuous(labels=scales::dollar_format(prefix="£")) +
geom_hline(yintercept = 0,linetype="dashed") + ylim=range(richards$y)
richards %>% ggplot(aes(x,y,color=group))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("ENBS")+
labs(title="ENBS - decision population (willingness to pay = £20 000",color="")+geom_point()+
scale_y_continuous(labels=scales::dollar_format(prefix="£")) +
geom_hline(yintercept = 0,linetype="dashed") + ylim=range(richards$y)
richards %>% ggplot(aes(x,y,color=group))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("ENBS")+
labs(title="ENBS - decision population (willingness to pay = £20 000",color="")+geom_point()+
scale_y_continuous(labels=scales::dollar_format(prefix="£")) +
geom_hline(yintercept = 0,linetype="dashed")
richards %>% ggplot(aes(x,y,color=group))+geom_line()+theme_bw()+
xlab("Number of practices per arm")+ylab("ENBS")+
labs(title="ENBS - decision population (willingness to pay = £20 000",color="")+geom_point()+
scale_y_continuous(labels=scales::dollar_format(prefix="£")) +
geom_hline(yintercept = 0,linetype="dashed")+ylim(range(richards$y))
range(richards$y)
